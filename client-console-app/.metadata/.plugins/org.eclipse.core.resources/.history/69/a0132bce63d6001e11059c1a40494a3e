package service;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.net.HttpURLConnection;
import java.net.URL;

public class UserAccountService {
    private static final String API_BASE_URL = "https://api.example.com/accounts/";

    private static UserAccountService instance;

    // Private constructor to prevent instantiation from outside
    private UserAccountService() {
    }

    // Static method to get the singleton instance
    public static UserAccountService getInstance() {
        if (instance == null) {
            synchronized (UserAccountService.class) {
                if (instance == null) {
                    instance = new UserAccountService();
                }
            }
        }
        return instance;
    }

    public double getBalance(int accountId) throws IOException {
        String apiUrl = API_BASE_URL + accountId + "/balance";
        String jsonResponse = sendGetRequest(apiUrl);
        return Double.parseDouble(jsonResponse);
    }

    public boolean changeCardPin(int accountId, String newPin) throws IOException {
        String apiUrl = API_BASE_URL + accountId + "/pin?newPin=" + newPin;
        String jsonResponse = sendPutRequest(apiUrl);
        return jsonResponse.equals("success");
    }

    public boolean deposit(int accountId, double amount) throws IOException {
        String apiUrl = API_BASE_URL + accountId + "/deposit?amount=" + amount;
        String jsonResponse = sendPutRequest(apiUrl);
        return jsonResponse.equals("success");
    }

    public boolean withdraw(int accountId, double amount) throws IOException {
        String apiUrl = API_BASE_URL + accountId + "/withdraw?amount=" + amount;
        String jsonResponse = sendPutRequest(apiUrl);
        return jsonResponse.equals("success");
    }

    private String sendGetRequest(String apiUrl) throws IOException {
        URL url = new URL(apiUrl);
        HttpURLConnection conn = (HttpURLConnection) url.openConnection();
        conn.setRequestMethod("GET");

        try (BufferedReader in = new BufferedReader(new InputStreamReader(conn.getInputStream()))) {
            StringBuilder response = new StringBuilder();
            String inputLine;
            while ((inputLine = in.readLine()) != null) {
                response.append(inputLine);
            }
            return response.toString();
        } finally {
            conn.disconnect();
        }
    }

    private String sendPutRequest(String apiUrl) throws IOException {
        URL url = new URL(apiUrl);
        HttpURLConnection conn = (HttpURLConnection) url.openConnection();
        conn.setRequestMethod("PUT");

        try (BufferedReader in = new BufferedReader(new InputStreamReader(conn.getInputStream()))) {
            StringBuilder response = new StringBuilder();
            String inputLine;
            while ((inputLine = in.readLine()) != null) {
                response.append(inputLine);
            }
            return response.toString();
        } finally {
            conn.disconnect();
        }
    }
}
